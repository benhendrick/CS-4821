2*sqrt(0.00605)
-2*sqrt(0.00605)
-2*sqrt(0.003442)
-2*sqrt(0.005)
200*(.12^2+.13^2+.13^2)
200*(202)*(.13^2/199+.13^2/198+.12^2/197)
ar2.sim <- arima.sim(list(order=c(2,0,0), ar=c(-1.5, 0.75)),n=48)
?arima.sim
ar2.sim <- arima.sim(list( ar=c(-1.5, 0.75)),n=48)
ar2.sim <- arima.sim(list(ar=c(1.5, -0.75)),n=48)
ar2.sim <- arima.sim(list(order=c(2,0,0),ar=c(1.5, -0.75)),n=48)
ar2.fit <- lm(ar2.sim)
tsdiag(ar2.sim)
fitted(ar2.sim)
ar2.sim <- arima.sim(list(order=c(2,0,0),ar=c(1.5, -0.75)),n=48)
ar2.sim <- arima.sim(list(order=c(2,0,0),ar=c(1.5, -0.75)),n=48)
set.seed(34567)
ar2.sim <- arima.sim(list(order=c(2,0,0),ar=c(1.5, -0.75)),n=48)
ar2.sim
lm(ar2.sim)
ar2.fit <- arima(ar2.sim, order = c(2,0,0))
ar2.fit
fitted(ar2.fit)
ar2.sim-fitted(ar2.fit)
plot(ar2.sim-fitted(ar2.fit))
resid(ar2.sim)
rstandard(ar2.sim)
rstandard(ar2.fit)
plot(rstandard(ar2.fit))
plot(rstandard(ar2.fit), type = "l")
plot(rstandard(ar2.fit), type = "o")
plot(rstandard(ar2.fit), type = "o",
main = "Residuals or AR(2) Model",
ylab = "Standard Residuals")
abline(h=0)
qqplot(rstandard(ar2.fit))
qqnorm(rstandard(ar2.fit))
qqline(rstandard(ar2.fit))
acf(rstandard(ar2.fit))
library(TSA)
data(robot)
robot.ar1 <- arima(robot, order = c(1,0,0))
robot.ima11 <- arima(robot, order = c(0,1,1))
plot(robot.ar1)
plot(rstandard(robot.ar1))
plot(rstandard(robot.ar1), type = "o")
plot(rstandard(robot.ima11), type = "o")
mean(rstandard(robot.ar1))
mean(rstandard(robot.ima11))
plot(rstandard(robot.ar1), type = "o",
main = "Standard Residuals of AR(1) Model",
ylab = "Standard Residuals")
plot(rstandard(robot.ima11), type = "o",
main = "Standard Residuals of IMA(1,1) Model",
ylab = "Standard Residuals")
plot(rstandard(robot.ar1), type = "o",
main = "Standard Residuals of AR(1) Model",
ylab = "Standard Residuals")
abline(h=0)
plot(rstandard(robot.ima11), type = "o",
main = "Standard Residuals of IMA(1,1) Model",
ylab = "Standard Residuals")
abline(h=0)
qqnorm(residuals(robot.ar1))
qqline(residuals(robot.ar1))
qqnorm(residuals(robot.ima11))
qqline(residuals(robot.ima11))
qqnorm(residuals(robot.ar1))
qqline(residuals(robot.ar1))
qqnorm(residuals(robot.ima11))
qqline(residuals(robot.ima11))
acf(robot.ar1)
acf(residuals(robot.ar1))
acf(rstandard(robot.ar1))
acf(residuals(robot.ar1), main = "Residuals of AR(1)")
acf(residuals(robot.ima11), main = "Residuals of IMA(1,1)")
plot(rstandard(oil.ma1.mle), type = "o",
main = "Standard Residuals of MA(1) Model",
ylab = "Standard Residuals")
abline(h=0)
qqnorm(residuals(robot.ar1), main = "adsf")
phi = 0.7
z = 1.96
a = phi + z*sqrt((1-phi^2)/n)
phi = 0.7
z = 1.96
n= 1
while (a-b > 0.2) {
a = phi + z*sqrt((1-phi^2)/n)
a = phi - z*sqrt((1-phi^2)/n)
n = n+1
}
phi = 0.7
z = 1.96
n= 1
while (a-b > 0.2) {
a = phi + z*sqrt((1-phi^2)/n)
b = phi - z*sqrt((1-phi^2)/n)
n = n+1
}
phi = 0.7
z = 1.96
n= 1
a = phi + z*sqrt((1-phi^2)/n)
b = phi - z*sqrt((1-phi^2)/n)
while (a-b > 0.2) {
a = phi + z*sqrt((1-phi^2)/n)
b = phi - z*sqrt((1-phi^2)/n)
n = n+1
}
n
a
b
set.seed(34567)
ar2.sim <- arima.sim(list(order=c(2,0,0),ar=c(1.5, -0.75)),n=48)
ar2.fit <- arima(ar2.sim, order = c(2,0,0))
plot(rstandard(ar2.fit), type = "o",
main = "Residuals or AR(2) Model",
ylab = "Standard Residuals")
abline(h=0)
ar2.fit <- arima(ar2.sim, order = c(2,0,0))
plot(rstandard(ar2.fit), type = "o",
main = "Residuals or AR(2) Model",
ylab = "Standard Residuals")
?rstandard
plot(rstandard(ar2.sim), type = "o",
main = "Residuals or AR(2) Model",
ylab = "Standard Residuals")
abline(h=0)
plot(residuals(ar2.fit), type = "o",
main = "Residuals or AR(2) Model",
ylab = "Standard Residuals")
abline(h=0)
qqnorm(rstandard(ar2.fit))
qqline(rstandard(ar2.fit))
qqnorm(residuals(ar2.fit))
qqline(residuals(ar2.fit))
acf(residuals(ar2.fit))
qqnorm(residuals(ar2.fit))
qqline(residuals(ar2.fit))
acf(residuals(ar2.fit), main = "ACF of AR(2) Model")
qqnorm(residuals(ar2.fit))
qqline(residuals(ar2.fit))
ar2.fit <- arima(ar2.sim, order = c(2,0,0))
plot(residuals(ar2.fit), type = "o",
main = "Residuals or AR(2) Model",
ylab = "Residuals")
abline(h=0)
ar2.fit
signif(acf(residuals(ar2.fit),plot=F)$acf[1:12],2)
length(ar2.fit)
signif(acf(residuals(ar2.fit),plot=F)$acf[1:12],2)
n = length(ar2.fit)
a = 0
for (i in 1:n) {
a = a + (ar2.fit[1]^2)/(n-i)
}
ar2.fit[1]
ar2.fit
b = signif(acf(residuals(ar2.fit),plot=F)$acf[1:12],2)
n = length(ar2.fit)
a = 0
b = signif(acf(residuals(ar2.fit),plot=F)$acf[1:12],2)
for (i in 1:n) {
a = a + (b[i]^2)/(n-i)
}
n*(n+2)*a
n = length(ar2.fit)
a = 0
b = signif(acf(residuals(ar2.fit),plot=F)$acf[1:12],2)
for (i in 1:12) {
a = a + (b[i]^2)/(n-i)
}
n*(n+2)*a
n*(n+2)*a
signif(acf(residuals(ar2.fit),plot=F)$acf[1:12],2)
set.seed(5678)
signif(acf(residuals(ar2.fit),plot=F)$acf[1:12],2)
Muscle <- read.table("~/GitHub/MA-4710/Homework 10/Muscle.txt", quote="\"", comment.char="")
View(Muscle)
Muscle <- read.table("~/GitHub/MA-4710/Homework 10/Muscle.txt", quote="\"", comment.char="")
Muscle <- read.table("~/GitHub/MA-4710/Homework 10/Muscle.txt", quote="\"", comment.char="")
names(Muscle) <- c("x","y")
muscle.fit <- lm(y~x+x^2, data = Muscle)
muscle.fit
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
muscle.fit
?I
plot(muscle.fit)
plot(fitted(muscle.fit))
abline(muscle.fit)
sales <- read.csv("/var/folders/6j/_n_8wtg912559sqd775wfctw0000gn/T//Rtmphy0Dnj/datab08632a8385", sep="")
View(sales)
plot(sales.dat$Advert,sales.dat$Sales)
sales.dat<-sales
plot(sales.dat$Advert,sales.dat$Sales)
sales.dat
sales.fit = lm(Sales ~ Advert + I(Advert^2), data= sales.dat)
summary(sales.fit)
X = cbind(rep(1,21),sales.dat$Advert,sales.dat$Advert^2)
X
t(X) %*% X
solve(t(X) %*% X) %*% t(X)%*%sales.dat$Sales
plot(sales.dat$Advert,sales.dat$Sales)
x = seq(0,16,by=0.01)
y = sales.fit$coeff[1]+sales.fit$coeff[2]*x+sales.fit$coeff[3]*x^2
lines(x,y)
abline(lm(Sales~Advert,data=sales.dat),lty=2)
plot(fitted(muscle.fit))
x <- seq(0:16, by=0.01)
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1]
y
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2] + muscle.fit$coefficients[2]^2
lines(x,y)
line(x,y)
plot(fitted(muscle.fit))
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2] + muscle.fit$coefficients[2]^2
lines(x,y)
y <- muscle.fit$coeff[1] + muscle.fit$coeff[2]*x + muscle.fit$coefficients[2]^2*x
lines(x,y)
plot(fitted(muscle.fit))
x <- seq(0,16, by=0.01)
y <- muscle.fit$coeff[1] + muscle.fit$coeff[2]*x + muscle.fit$coefficients[2]^2*x
lines(x,y)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[2]*x^2
lines(x,y)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
plot(fitted(muscle.fit))
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
y
muscle.fit$coefficients[1]
Muscle <- read.table("~/GitHub/MA-4710/Homework 10/Muscle.txt", quote="\"", comment.char="")
names(Muscle) <- c("x","y")
## Part A
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(fitted(muscle.fit))
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
muscle.fit
sales.dat<-sales
plot(sales.dat$Advert,sales.dat$Sales)
sales.dat
sales.fit = lm(Sales ~ Advert + I(Advert^2), data= sales.dat)
summary(sales.fit)
X = cbind(rep(1,21),sales.dat$Advert,sales.dat$Advert^2)
X
t(X) %*% X
solve(t(X) %*% X) %*% t(X)%*%sales.dat$Sales
plot(sales.dat$Advert,sales.dat$Sales)
x = seq(0,16,by=0.01)
y = sales.fit$coeff[1]+sales.fit$coeff[2]*x+sales.fit$coeff[3]*x^2
lines(x,y)
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(fitted(muscle.fit))
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
fitted(muscle.fit)
plot(Muscle$x, Muscle$y)
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
plot(Muscle$y, Muscle$x)
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
Muscle <- read.table("~/GitHub/MA-4710/Homework 10/Muscle.txt", quote="\"", comment.char="")
names(Muscle) <- c("x","y")
## Part A
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(Muscle$y, Muscle$x)
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
sales.dat<-sales
plot(sales.dat$Advert,sales.dat$Sales)
sales.dat
sales.fit = lm(Sales ~ Advert + I(Advert^2), data= sales.dat)
summary(sales.fit)
X = cbind(rep(1,21),sales.dat$Advert,sales.dat$Advert^2)
X
t(X) %*% X
solve(t(X) %*% X) %*% t(X)%*%sales.dat$Sales
plot(sales.dat$Advert,sales.dat$Sales)
x = seq(0,16,by=0.01)
y = sales.fit$coeff[1]+sales.fit$coeff[2]*x+sales.fit$coeff[3]*x^2
lines(x,y)
abline(lm(Sales~Advert,data=sales.dat),lty=2)
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(Muscle$y, Muscle$x)
plot(Muscle$x, Muscle$y)
x <- seq(0,16, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
x <- seq(0,70 by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
x <- seq(0,70, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
x <- seq(50,120, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
## Part A
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(Muscle$x, Muscle$y)
x <- seq(50,120, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
x <- seq(50,120, by=0.001)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(Muscle$x, Muscle$y)
x <- seq(50,120, by=0.001)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(Muscle$x, Muscle$y)
x <- seq(50,120, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
summary(muscle.fit)
summary(muscle.fit)$r.squared
summary(muscle.fit)
summary(muscle.fit)$p.value
summary(muscle.fit)$pvale
summary(muscle.fit)
x <- 48
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
y
x <- 48
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
y
x <- seq(50,120, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
y
x <- 48
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
y
Muscle <- read.table("~/GitHub/MA-4710/Homework 10/Muscle.txt", quote="\"", comment.char="")
names(Muscle) <- c("y","x")
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(Muscle$x, Muscle$y)
x <- seq(50,120, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
x <- seq(40,80, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
summary(muscle.fit)$r.squared
summary(muscle.fit)
x <- 48
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
y
qt(0.975, 60-3)
upl <- y + qt(0.975, 60-3)
lol <- y + qt(0.975, 60-3)
lol
upl <- y + qt(0.975, 60-3)
lol <- y - qt(0.975, 60-3)
x <- 48
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
upl <- y + qt(0.975, 60-3)
lol <- y - qt(0.975, 60-3)
upl
lol
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x
upl <- y + qt(0.975, 60-3)
lol <- y - qt(0.975, 60-3)
upl
lol
summary(muscle.fit)
anova(muscle.fit)
anova(muscle.fit)[3,3]
upl <- y + qt(0.975, 60-3)*anova(muscle.fit)[3,3]
lol <- y - qt(0.975, 60-3)*anova(muscle.fit)[3,3]
upl
lol
upl <- y + qt(0.975, 60-3)*sqrt(anova(muscle.fit)[3,3])
lol <- y - qt(0.975, 60-3)*sqrt(anova(muscle.fit)[3,3])
upl
lol
upl <- y + qt(0.975, 60-3)*sqrt(anova(muscle.fit)[3,3]+anova(muscle.fit)[3,3]^2)
lol <- y - qt(0.975, 60-3)*sqrt(anova(muscle.fit)[3,3]+anova(muscle.fit)[3,3]^2)
upl
lol
?confint
confint(muscle.fit)
confint(y)
confint(muscle.fit)
confint.lm(muscle.fit)
confint(muscle.fit)
newdata <- data.frame(y=y, x=x)
predict(muscle.fit, newdata, interval = "predict")
predict(muscle.fit, newdata, interval = "confidence")
predict
predict(muscle.fit, newdata, interval = "predict")
newdata <- data.frame(x=x)
predict(muscle.fit, newdata, interval = "confidence")
predict(muscle.fit, newdata, interval = "predict")
newdata <- data.frame(y=y, x=x)
predict(muscle.fit, newdata, interval = "confidence")
predict(muscle.fit, newdata, interval = "predict")
muscle.fit.simple <- lm(y~x, data = Muscle)
anova(muscle.fit.simple, muscle.fit)
sqrt(summary(muscle.fit)$r.squared)
muscle.fit.resid <- residuals(muscle.fit)
muscle.fit.resid
plot(muscle.fit)
plot(fitted(muscle.fit), muscle.fit.resid)
plot(fitted(muscle.fit), muscle.fit.resid, main = "Fitted vs Residuals",
xlab = "Fitted Values", ylab = "Residuals")
abline(h=0)
plot(fitted(muscle.fit), muscle.fit.resid, main = "Fitted vs Residuals",
xlab = "Fitted Values", ylab = "Residuals")
plot(muscle.fit.resid)
plot(muscle.fit.resid, main = "x vs Residuals",
xlab = "x", ylab = "Residuals")
qqnorm(muscle.fit.resid)
abline(muscle.fit.resid)
abline(muscle.fit)
qqnorm(muscle.fit)
abline(muscle.fit)
qqline(muscle.fit.resid)
anova(muscle.fit)
gpa2 <- read.delim("~/GitHub/MA-4710/Homework 10/gpa2.txt", header=FALSE)
View(gpa2)
names(gpa2) <- c("y", "x1", "x2")
gpa2.fit <- lm(y~x1+x2, data = gpa2)
summary(gpa2.fit)
gpa2.fit
gpa2.fit.simple <- lm(y~x1, data = gpa2)
anova(gpa2.fit.simple, gpa2.fit)
gpa2.fit.resid <- resid(gpa2.fit)
plot(gpa2$x1*gpa2$x2, gpa2.fit.resid)
gpa2.fit2 <- lm(y~x1+x2+x1*x2, data = gpa2)
gpa2.fit2
anova(gpa2.fit, gpa2.fit2)
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
muscle.fit
summary(muscle.fit)
predict(muscle.fit, newdata, interval = "confidence")
predict(muscle.fit, newdata, interval = "confidence")[1]
predict(muscle.fit, newdata, interval = "predict")
muscle.fit.simple <- lm(y~x, data = Muscle)
anova(muscle.fit.simple, muscle.fit)
summary(muscle.fit)
Muscle <- read.table("~/GitHub/MA-4710/Homework 10/Muscle.txt", quote="\"", comment.char="")
names(Muscle) <- c("y","x")
muscle.fit <- lm(y~x+I(x^2), data = Muscle)
plot(Muscle$x, Muscle$y)
x <- seq(40,80, by=0.01)
y <- muscle.fit$coefficients[1] + muscle.fit$coefficients[2]*x + muscle.fit$coefficients[3]*x^2
lines(x,y)
summary(muscle.fit)
summary(muscle.fit)$r.squared
muscle.fit
plot(fitted(muscle.fit), muscle.fit.resid, main = "Fitted vs Residuals",
xlab = "Fitted Values", ylab = "Residuals")
plot(muscle.fit.resid, main = "x vs Residuals",
xlab = "x", ylab = "Residuals")
qqnorm(muscle.fit.resid)
qqline(muscle.fit.resid)
hist(muscle.fit.resid)
anova(muscle.fit)
anova(muscle.fit)
gpa2
gpa2.fit
gpa2.fit.simple <- lm(y~x1, data = gpa2)
anova(gpa2.fit.simple, gpa2.fit)
gpa2.fit.resid <- resid(gpa2.fit)
plot(gpa2$x1*gpa2$x2, gpa2.fit.resid)
plot(gpa2$x1*gpa2$x2, gpa2.fit.resid, main = "Residuals vs X1X2",
xlab = "X1X2", ylab = "Residuals")
plot(gpa2.fit.resid,gpa2$x1*gpa2$x2, main = "Residuals vs X1X2",
xlab = "X1X2", ylab = "Residuals")
plot(gpa2$x1*gpa2$x2, gpa2.fit.resid, main = "Residuals vs X1X2",
xlab = "X1X2", ylab = "Residuals")
gpa.fit2
gpa2.fit2 <- lm(y~x1+x2+x1*x2, data = gpa2)
gpa2.fit2
anova(gpa2.fit, gpa2.fit2)
setwd("~/GitHub/CS 4821/Project-5")
library(arules)
items <- read.transactions("items.txt", format = "basket", sep=",", rm.duplicates =TRUE)
items.rules <- apriori(items, parameter = list(supp = 0.6, conf = 0.8))
inspect(items.rules)
trans <- read.transactions("trans.txt", format = "basket",sep=",")
rules <- apriori(trans, parameter = list(supp = 0.25, conf = 0.5, target="rules"))
interestMeasure(rules, "allConfidence")
interestMeasure(rules, "allConfidence", trans)
interestMeasure(rules, allConfidence, trans)
interestMeasure(rules, 'allConfidence', trans)
interestMeasure(rules, "allConfidence", trans)
interestMeasure(rules, measure = "allConfidence", trans)
interestMeasure(trans, measure = "allConfidence", trans)
interestMeasure(trans, measure = "allConfidence")
interestMeasure(rules, measure = c("kulczynski"), trans)
interestMeasure(rules, measure = c("kulczynski", "cosine"), trans)
interestMeasure(rules, measure = c("kulczynski", "cosine", "life"), trans)
interestMeasure(rules, measure = c("kulczynski", "cosine", "lift"), trans)
interestMeasure(rules, measure = c("kulczynski", "cosine", "lift", "correlation"), trans)
interestMeasure(rules, measure = c("kulczynski", "cosine", "lift", "phi"), trans)
interestMeasure(rules, measure = c("kulczynski", "cosine", "lift", "phi", "allConfidence"), trans)
im <- interestMeasure(rules, measure = c("kulczynski", "cosine", "lift", "phi"), trans)
